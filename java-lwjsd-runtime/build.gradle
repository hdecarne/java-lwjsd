apply plugin: "distribution"

dependencies {
	configurations.runtime.exclude(group: "org.eclipse.jdt", module: "org.eclipse.jdt.annotation")
	implementation project(":java-lwjsd-api")
	implementation(group: "javax.ws.rs", name: "javax.ws.rs-api", version: "2.1.1")
	implementation(group: "org.glassfish.jersey.core", name: "jersey-client", version: "2.27")
	implementation(group: "org.glassfish.jersey.core", name: "jersey-server", version: "2.27")
	implementation(group: "org.glassfish.jersey.containers", name: "jersey-container-grizzly2-http", version: "2.27")
	implementation(group: "org.glassfish.jersey.media", name: "jersey-media-json-jackson", version: "2.27")
	implementation(group: "org.glassfish.jersey.media", name: "jersey-media-multipart", version: "2.27")
	implementation(group: "org.glassfish.jersey.ext", name: "jersey-proxy-client", version: "2.27")
	runtime(group: "org.glassfish.jersey.inject", name: "jersey-hk2", version: "2.27")
	runtime(group: "javax.xml.bind", name: "jaxb-api", version: "2.3.0")
	runtime(group: "javax.activation", name: "activation", version: "1.1.1")
}

jar {
	def buildTimestamp = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
	
	manifest {
		attributes(
			"X-Application-Name": "lwjsd-runtime",
			"X-Application-Version": project.version,
			"X-Application-Build": buildTimestamp
		)
	}
}

task bootJar(type: Jar) {
	appendix = "boot"
	entryCompression = ZipEntryCompression.STORED
	from jar
	from configurations.runtimeClasspath.collect {
		it.name.matches("java-boot-.*.jar") ? zipTree(it) : it
	}
	manifest {
		attributes(
			"Main-Class": "de.carne.boot.Application",
		)
	}
}

distributions {
	main {
		contents {
			from bootJar
		}
	}
}

tasks.withType(Tar){
	compression = Compression.GZIP
	extension = "tar.gz"
}

task testServiceJar(type: Jar) {
	baseName = project.name + "-test-services"
	version = "0.0.0"
	from sourceSets.test.output
	include "de/carne/lwjsd/runtime/test/services/**/*"
	include "META-INF/services/*"
}

test.dependsOn(testServiceJar)
